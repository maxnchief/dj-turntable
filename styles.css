body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100vh;
    
}

body > div {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 auto;
}

.box {
    display: flex;
    flex-direction: column; /* Stack children vertically */
    justify-content: center; /* Center items vertically */
    align-items: center; /* Center items horizontally */
    width: 70%;
    height: 70%;
    max-width: 750px;
    max-height: 750px;
    background-color: grey;
    border: 5px solid #000;
    box-shadow: 0 0 10px #000;
    position: relative;
    z-index: 2;
    gap: 20px; /* Add spacing between the children */
}

.disc {
    width: 40vmin;
    height: 40vmin;
    border-radius: 50%;
    background: repeating-radial-gradient(rgb(0, 0, 0), rgb(6, 6, 6) 3px, rgb(0, 0, 0) 3px);
    position: relative; /* Ensure it can be layered */
    z-index: 3; /* Higher z-index to appear in front */
}

@keyframes spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(360deg);
    }
}

@keyframes scratch {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(-360deg);
    }
}

#player {
    border-radius: 50%;
    position: relative; /* Ensure proper stacking context */
    z-index: -1; /* Lower z-index to place it behind */
}

.controls, .volume {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px; /* Add spacing between buttons and inputs */
}

#player-container {
    position: absolute; /* Position it relative to the nearest positioned ancestor */
    top: 50%; /* Move it 50% down from the top */
    left: 50%; /* Move it 50% right from the left */
    transform: translate(-50%, -50%); /* Center it by offsetting its own width and height */
    z-index: 2; /* Ensure it appears above other elements if needed */
}